DEF CHESS_PROG( )
	DECL POS board[2, 64]
	DECL INT content, header, last_content, last_header;
	
	;FOLD INI
	  ;FOLD BASISTECH INI
		GLOBAL INTERRUPT DECL 3 WHEN $STOPMESS==TRUE DO IR_STOPM ( )
		INTERRUPT ON 3 
		BAS (#INITMOV,0 )
	  ;ENDFOLD (BASISTECH INI)
	  ;FOLD USER INI
		;Make your modifications here

	  ;ENDFOLD (USER INI)
	;ENDFOLD (INI)
	
	PTP HOME Vel= 50% DEFAULT
	INIT_BOARD(board[,], 30, 6, 90)
	
	LOOP
		$OUT[1] = TRUE
		WAIT SEC 0.3
		
		last_header = header
		last_content = content
		
		header  = GET_CMD_HEADER()
		content = GET_CMD_CONTENT()
		
		IF last_content <> content OR last_header <> header THEN
			SWITCH header
				CASE 1
					$OUT[1] = FALSE
					
					LIN start_pt : board[2, content+1] Vel= 0.5 m/s
					WAIT SEC 1.2
					LIN start_pt : board[1, content+1] Vel= 0.5 m/s
					WAIT SEC 1.2
					
					PUT_FIG( );
					
					LIN start_pt : board[2, content+1] Vel= 0.5 m/s
					WAIT SEC 1.2
					
				CASE 2
					$OUT[1] = FALSE
					
					LIN start_pt : board[2, content+1] Vel= 0.5 m/s
					WAIT SEC 1.2
					LIN start_pt : board[1, content+1] Vel= 0.5 m/s
					WAIT SEC 1.2
					
					TAKE_FIG( );
					
					LIN start_pt : board[2, content+1] Vel= 0.5 m/s
					WAIT SEC 1.2
					
				CASE 3
					$OUT[1] = FALSE
					
					LIN start_pt : board[2, content+1] Vel= 0.5 m/s
					WAIT SEC 1.2
					LIN start_pt : board[1, content+1] Vel= 0.5 m/s
					WAIT SEC 1.2
					
					TAKE_FIG( );
					
					LIN start_pt : board[2, content+1] Vel= 0.5 m/s
					WAIT SEC 1.2
					
					LIN pt_chess_box : board[2, content+1] Vel= 0.5 m/s
					WAIT SEC 1.2
					PUT_FIG( );
					
				CASE 0
					SWITCH content
						CASE 1
							$OUT[1] = FALSE
							LIN pt_base Vel= 0.5 m/s
							WAIT SEC 1.2
							
						CASE 2
							$OUT[1] = FALSE
							LIN pt_clock_high Vel= 0.5 m/s
							WAIT SEC 1.2
							LIN pt_clock_low Vel= 0.5 m/s
							WAIT SEC 1.2
							LIN pt_clock_high Vel= 0.5 m/s
							WAIT SEC 1.2
							
						CASE 31
							EXIT
					ENDSWITCH
			ENDSWITCH
		ENDIF
	ENDLOOP
END

DEF TAKE_FIG( )
	$OUT[?] = TRUE
	$OUT[?] = FALSE
	
	WAIT FOR $IN[?] = TRUE 
END

DEF PUT_FIG( )
	$OUT[?] = FALSE
	$OUT[?] = TRUE
	
	WAIT FOR $IN[?] = TRUE 
END

DEFFCT INT GET_CMD_CONTENT( )
	DECL INT result = 0, i
	
	FOR i = 1 TO 6 STEP 1
		result = result * 2
		IF &IN[i] == TRUE THEN result = result + 1 ENDIF
	ENDFOR
	
	RETURN result
ENDFCT

DEFFCT INT GET_CMD_HEADER( )
	DECL INT result = 0
	
	IF $IN[7] == TRUE THEN result = result + 1 ENDIF
	IF $IN[8] == TRUE THEN result = result + 2 ENDIF
	
	RETURN result
ENDFCT

DEF INIT_BOARD(board[,] : OUT, w : IN, h1 : IN, h2 : IN)
	DECL POS board[,]
	DECL INT w, h1, h2
	DECL INT x, y
	
	FOR y = 0 TO 7 STEP 1
		FOR x = 1 TO 8 STEP 1
			board[1, y * 8 + x] = {X (w * x - w / 2), Y (w * y + w / 2), Z h1, A 0, B 0, C 0, E1 0, E2 0, E3 0, E4 0, E5 0, E6 0}
			board[2, y * 8 + x] = {X (w * x - w / 2), Y (w * y + w / 2), Z h2, A 0, B 0, C 0, E1 0, E2 0, E3 0, E4 0, E5 0, E6 0}
		ENDFOR
	ENDFOR	
END
