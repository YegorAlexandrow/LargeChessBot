DEF CHESS_PROG( )
	DECL INT content, header, last_content, last_header;
	DECL INT del_pos = 1;
	
	;FOLD INI
	  ;FOLD BASISTECH INI
		GLOBAL INTERRUPT DECL 3 WHEN $STOPMESS==TRUE DO IR_STOPM ( )
		INTERRUPT ON 3 
		BAS (#INITMOV,0 )
	  ;ENDFOLD (BASISTECH INI)
	  ;FOLD USER INI
		;Make your modifications here

	  ;ENDFOLD (USER INI)
	;ENDFOLD (INI)
	
	;FOLD PTP HOME  Vel= 100 % DEFAULT;%{PE}%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME, 3:, 5:100, 7:DEFAULT
        $BWDSTART = FALSE
        PDAT_ACT = PDEFAULT
        FDAT_ACT = FHOME
        BAS (#PTP_PARAMS, 100 )
        $H_POS = XHOME
        PTP XHOME
    ;ENDFOLD
	
	GRIP(FALSE)
	
	;FOLD PTP start_pt Vel=100 % PDAT8 Tool[1] Base[0];%{PE}%R 8.2.20,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:start_pt, 3:, 5:100, 7:PDAT8
		$BWDSTART = FALSE
		PDAT_ACT = PPDAT8
		FDAT_ACT = Fstart_pt
		BAS(#PTP_PARAMS, 100)
		PTP Xstart_pt 
	;ENDFOLD
	
	LOOP
		$OUT[1] = TRUE
		WAIT SEC 0.3
		
		last_header = header
		last_content = content
		
		header  = GET_CMD_HEADER()
		content = GET_CMD_CONTENT()
		
		IF last_content <> content OR last_header <> header THEN
			SWITCH header
				CASE 1
					$OUT[1] = FALSE	
					MOVE_FIELD(Xzero_pt, board[content], FALSE)	
				CASE 2
					$OUT[1] = FALSE
					MOVE_FIELD(Xzero_pt, board[content], TRUE)	
				CASE 3
					$OUT[1] = FALSE
					MOVE_FIELD(Xzero_pt, board[content], TRUE)
					MOVE_FIELD(Xdel_pt, del_figs[del_pos], FALSE)	
					del_pos = del_pos + 1
				CASE 0
					SWITCH content
						CASE 1
							$OUT[1] = FALSE
							;FOLD LIN start_pt Vel=0.5 m/s CPDAT1 Tool[1] Base[0];%{PE}%R 8.2.20,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:start_pt, 3:, 5:0.5, 7:CPDAT1
								$BWDSTART = FALSE
								LDAT_ACT = LCPDAT1
								FDAT_ACT = Fstart_pt
								BAS(#CP_PARAMS, 0.5)
								LIN Xstart_pt 
							;ENDFOLD
						
						CASE 3
							del_pos = 1
						
						CASE 31
							EXIT
					ENDSWITCH
			ENDSWITCH
		ENDIF
	ENDLOOP
	
	;FOLD PTP HOME  Vel= 100 % DEFAULT;%{PE}%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME, 3:, 5:100, 7:DEFAULT
        $BWDSTART = FALSE
        PDAT_ACT = PDEFAULT
        FDAT_ACT = FHOME
        BAS (#PTP_PARAMS, 100 )
        $H_POS = XHOME
        PTP XHOME
    ;ENDFOLD
END

DEFFCT INT GET_CMD_CONTENT( )
	DECL INT result = 0, i
	
	FOR i = 1 TO 6 STEP 1
		result = result * 2
		IF &IN[i] == TRUE THEN result = result + 1 ENDIF
	ENDFOR
	
	RETURN result
ENDFCT

DEFFCT INT GET_CMD_HEADER( )
	DECL INT result = 0
	
	IF $IN[7] == TRUE THEN result = result + 1 ENDIF
	IF $IN[8] == TRUE THEN result = result + 2 ENDIF
	
	RETURN result
ENDFCT

DEF GRIP(state :IN)
    DECL BOOL state
	
    $OUT[19] = state
    $OUT[20] = NOT state
    
	WAIT FOR &IN[?] == TRUE
END

DEF MOVE_FIELD(pt :IN, pt_offset :IN, grip :IN)
	DECL E6POS pt, pt_offset
	DECL BOOL grip
	
	;FOLD LIN zero_pt Vel=0.5 m/s CPDAT1 Tool[1] Base[0];%{PE}%R 8.2.20,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:start_pt, 3:, 5:0.5, 7:CPDAT1
		$BWDSTART = FALSE
		LDAT_ACT = LCPDAT1
		FDAT_ACT = Fzero_pt
		BAS(#CP_PARAMS, 0.5)
		LIN pt : pt_offset : high_pt
	;ENDFOLD	
	
	;FOLD LIN zero_pt Vel=0.5 m/s CPDAT1 Tool[1] Base[0];%{PE}%R 8.2.20,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:start_pt, 3:, 5:0.5, 7:CPDAT1
		$BWDSTART = FALSE
		LDAT_ACT = LCPDAT1
		FDAT_ACT = Fzero_pt
		BAS(#CP_PARAMS, 0.5)
		LIN pt : pt_offset
	;ENDFOLD
	
	GRIP(grip)	
	
	;FOLD LIN zero_pt Vel=0.5 m/s CPDAT1 Tool[1] Base[0];%{PE}%R 8.2.20,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:start_pt, 3:, 5:0.5, 7:CPDAT1
		$BWDSTART = FALSE
		LDAT_ACT = LCPDAT1
		FDAT_ACT = Fzero_pt
		BAS(#CP_PARAMS, 0.5)
		LIN pt : pt_offset : high_pt
	;ENDFOLD
			
END
